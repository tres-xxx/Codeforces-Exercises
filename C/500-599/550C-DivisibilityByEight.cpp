//code based on the code posted by user paulot on github.com

#include <string>
#include <iostream>
using namespace std;

bool inString(string &a, string &b){
    int count = 0;
    for(int i = 0; i < b.size(); i++){
        if(a[count] == b[i]) count++; //it checks the amount of digits
        if(count == a.size()) return true;
    }
    return false;
}

int main(){
    string n;
    cin >> n;
    //the next numbers are all the divisions until 1000, then it starts to repeat itself
    /*string mod8[125] = 
        { "0", "8", "16", "24", "32", "40", "48", "56", "64", "72", "80",
          "88", "96", "104", "112", "120", "128", "136", "144", "152",
          "160", "168", "176", "184", "192", "200", "208", "216", "224",
          "232", "240", "248", "256", "264", "272", "280", "288", "296",
          "304", "312", "320", "328", "336", "344", "352", "360", "368",
          "376", "384", "392", "400", "408", "416", "424", "432", "440",
          "448", "456", "464", "472", "480", "488", "496", "504", "512",
          "520", "528", "536", "544", "552", "560", "568", "576", "584",
          "592", "600", "608", "616", "624", "632", "640", "648", "656",
          "664", "672", "680", "688", "696", "704", "712", "720", "728",
          "736", "744", "752", "760", "768", "776", "784", "792", "800",
          "808", "816", "824", "832", "840", "848", "856", "864", "872",
          "880", "888", "896", "904", "912", "920", "928", "936", "944",
          "952", "960", "968", "976", "984", "992" };*/
    string mod8[39] =
          { "0", "8", "16", "24", "32", "56", "64", "72",
            "96", "112", "136", "144", "152", "176", "192", "312", 
            "336", "344", "352", "376", "392", "512", "536", "544", 
            "552", "576", "592", "712", "736", "744", "752", "776", 
            "792", "912", "936", "944", "952", "976", "992" };
    for(int i = 0; i < 39; i++){
        if(inString(mod8[i], n)){
            cout << "YES" << endl;
            cout << mod8[i] << endl;
            return 0;
        }
    }
    cout << "NO" << endl;
    return 0;
}
